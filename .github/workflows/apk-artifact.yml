name: Build Flutter APK Artifacts

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build-apks:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout code from repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup Java 17 (LTS) - required for Jetifier compatibility
      # Ubuntu runners come with Java 24 by default, which Jetifier doesn't support
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Setup Flutter 3.35.7 (stable) for all apps
      - name: Setup Flutter (3.35.7)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.7'
          channel: 'stable'
          cache: true

      # Verify Java and Flutter installation
      - name: Verify Java and Flutter installation
        run: |
          java -version
          echo "JAVA_HOME: $JAVA_HOME"
          echo "---"
          flutter --version
          flutter doctor -v

      # Ensure Android platform exists for admin app (idempotent)
      - name: Ensure Android platform for admin app
        working-directory: ./admin
        run: |
          flutter create --platforms=android .

      # Ensure Android platform exists for doctor app (idempotent)
      - name: Ensure Android platform for doctor app
        working-directory: ./doctor
        run: |
          flutter create --platforms=android .

      # Ensure compileSdk is 34 for admin/doctor (Groovy) and patient (Kotlin DSL)
      - name: Set compileSdkVersion to 34 for all apps
        run: |
          # admin (Groovy)
          if [ -f admin/android/app/build.gradle ]; then
            sed -i 's/compileSdkVersion [0-9]\+/compileSdkVersion 34/' admin/android/app/build.gradle || true
          fi
          # doctor (Groovy)
          if [ -f doctor/android/app/build.gradle ]; then
            sed -i 's/compileSdkVersion [0-9]\+/compileSdkVersion 34/' doctor/android/app/build.gradle || true
          fi
          # patient (Kotlin DSL)
          if [ -f patient/android/app/build.gradle.kts ]; then
            sed -i 's/compileSdk *= *[0-9]\+/compileSdk = 34/' patient/android/app/build.gradle.kts || true
          fi

      # Install dependencies for admin app
      - name: Install admin app dependencies
        working-directory: ./admin
        run: |
          flutter pub get

      # Install dependencies for doctor app
      - name: Install doctor app dependencies
        working-directory: ./doctor
        run: |
          flutter pub get

      # Install dependencies for patient app
      - name: Install patient app dependencies
        working-directory: ./patient
        run: |
          flutter pub get

      # Stop any running Gradle daemons and clear problematic cache
      - name: Reset Gradle environment
        run: |
          echo "Current Java version:"
          java -version
          echo "JAVA_HOME: $JAVA_HOME"
          echo "PATH: $PATH"
          # Stop all Gradle daemons to ensure fresh start with Java 17
          cd admin/android && ./gradlew --stop 2>/dev/null || true
          cd ../../doctor/android && ./gradlew --stop 2>/dev/null || true
          cd ../../patient/android && ./gradlew --stop 2>/dev/null || true
          cd ../..
          # Clear the problematic byte-buddy cache that was created with Java 24
          rm -rf ~/.gradle/caches/modules-2/files-2.1/net.bytebuddy/
          # Also clear processed artifacts that might have Java 24 bytecode
          rm -rf ~/.gradle/caches/transforms-*
          
      # Build unsigned release APK for admin app
      - name: Build admin release APK
        working-directory: ./admin
        run: |
          # Verify Java version before build
          echo "=== Java Environment ==="
          java -version
          echo "JAVA_HOME: $JAVA_HOME"
          which java
          echo "========================"
          # Set JAVA_HOME explicitly to ensure Gradle uses Java 17
          export JAVA_HOME="$JAVA_HOME"
          export PATH="$JAVA_HOME/bin:$PATH"
          # Verify Gradle will use the correct Java
          cd android && ./gradlew --version || true
          cd ..
          # Build with explicit Java 17
          flutter build apk --release --no-tree-shake-icons

      # Build unsigned release APK for doctor app
      - name: Build doctor release APK
        working-directory: ./doctor
        run: |
          flutter build apk --release --no-tree-shake-icons

      # Build unsigned release APK for patient app
      - name: Build patient release APK
        working-directory: ./patient
        run: |
          flutter build apk --release --no-tree-shake-icons

      # Package all APKs into build_outputs folder
      - name: Package APK artifacts
        run: |
          mkdir -p build_outputs
          cp admin/build/app/outputs/flutter-apk/app-release.apk build_outputs/admin_release.apk
          cp doctor/build/app/outputs/flutter-apk/app-release.apk build_outputs/doctor_release.apk
          cp patient/build/app/outputs/flutter-apk/app-release.apk build_outputs/patient_release.apk
          ls -lh build_outputs/

      # Upload all APKs as a single artifact named release-apks
      - name: Upload release APKs artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apks
          path: build_outputs/
          retention-days: 30